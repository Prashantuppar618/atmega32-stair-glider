
stair_glider.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000006c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000002de  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  000002de  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000050  00000000  00000000  0000030d  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000cd7  00000000  00000000  0000035d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000664  00000000  00000000  00001034  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000003d8  00000000  00000000  00001698  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000000b4  00000000  00000000  00001a70  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000001bc  00000000  00000000  00001b24  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000521  00000000  00000000  00001ce0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000040  00000000  00000000  00002201  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  00000286  00000286  000002da  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002244  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.LCD_Command 00000066  0000011e  0000011e  00000172  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.LCD_Char 00000066  00000184  00000184  000001d8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.LCD_Init 0000003c  000001ea  000001ea  0000023e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.LCD_String 0000002c  00000226  00000226  0000027a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.LCD_Clear 0000001a  00000252  00000252  000002a6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .progmemx.data 00000020  0000006c  0000006c  000000c0  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 19 .text.main    00000092  0000008c  0000008c  000000e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.libgcc  0000001a  0000026c  0000026c  000002c0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
   8:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
   c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  10:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  14:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  18:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  1c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  20:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  24:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  28:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  2c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  30:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  34:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  38:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  3c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  40:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  44:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  48:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  4c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  50:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 46 00 	call	0x8c	; 0x8c <main>
  64:	0c 94 34 00 	jmp	0x68	; 0x68 <_exit>

00000068 <_exit>:
  68:	f8 94       	cli

0000006a <__stop_program>:
  6a:	ff cf       	rjmp	.-2      	; 0x6a <__stop_program>

Disassembly of section .text:

00000286 <__bad_interrupt>:
 286:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.LCD_Command:

0000011e <LCD_Command>:
	if (row == 0 && pos<16)
	LCD_Command((pos & 0x0F)|0x80);	/* Command of first row and required position<16 */
	else if (row == 1 && pos<16)
	LCD_Command((pos & 0x0F)|0xC0);	/* Command of first row and required position<16 */
	LCD_String(str);		/* Call LCD string function */
}
 11e:	9b b3       	in	r25, 0x1b	; 27
 120:	9f 70       	andi	r25, 0x0F	; 15
 122:	28 2f       	mov	r18, r24
 124:	20 7f       	andi	r18, 0xF0	; 240
 126:	92 2b       	or	r25, r18
 128:	9b bb       	out	0x1b, r25	; 27
 12a:	9b b3       	in	r25, 0x1b	; 27
 12c:	9e 7f       	andi	r25, 0xFE	; 254
 12e:	9b bb       	out	0x1b, r25	; 27
 130:	9b b3       	in	r25, 0x1b	; 27
 132:	92 60       	ori	r25, 0x02	; 2
 134:	9b bb       	out	0x1b, r25	; 27
 136:	32 e0       	ldi	r19, 0x02	; 2
 138:	3a 95       	dec	r19
 13a:	f1 f7       	brne	.-4      	; 0x138 <LCD_Command+0x1a>
 13c:	00 c0       	rjmp	.+0      	; 0x13e <LCD_Command+0x20>
 13e:	9b b3       	in	r25, 0x1b	; 27
 140:	9d 7f       	andi	r25, 0xFD	; 253
 142:	9b bb       	out	0x1b, r25	; 27
 144:	ef e8       	ldi	r30, 0x8F	; 143
 146:	f1 e0       	ldi	r31, 0x01	; 1
 148:	31 97       	sbiw	r30, 0x01	; 1
 14a:	f1 f7       	brne	.-4      	; 0x148 <LCD_Command+0x2a>
 14c:	00 c0       	rjmp	.+0      	; 0x14e <LCD_Command+0x30>
 14e:	00 00       	nop
 150:	2b b3       	in	r18, 0x1b	; 27
 152:	f0 e1       	ldi	r31, 0x10	; 16
 154:	8f 9f       	mul	r24, r31
 156:	c0 01       	movw	r24, r0
 158:	11 24       	eor	r1, r1
 15a:	92 2f       	mov	r25, r18
 15c:	9f 70       	andi	r25, 0x0F	; 15
 15e:	89 2b       	or	r24, r25
 160:	8b bb       	out	0x1b, r24	; 27
 162:	8b b3       	in	r24, 0x1b	; 27
 164:	82 60       	ori	r24, 0x02	; 2
 166:	8b bb       	out	0x1b, r24	; 27
 168:	32 e0       	ldi	r19, 0x02	; 2
 16a:	3a 95       	dec	r19
 16c:	f1 f7       	brne	.-4      	; 0x16a <LCD_Command+0x4c>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <LCD_Command+0x52>
 170:	8b b3       	in	r24, 0x1b	; 27
 172:	8d 7f       	andi	r24, 0xFD	; 253
 174:	8b bb       	out	0x1b, r24	; 27
 176:	8f e9       	ldi	r24, 0x9F	; 159
 178:	9f e0       	ldi	r25, 0x0F	; 15
 17a:	01 97       	sbiw	r24, 0x01	; 1
 17c:	f1 f7       	brne	.-4      	; 0x17a <LCD_Command+0x5c>
 17e:	00 c0       	rjmp	.+0      	; 0x180 <LCD_Command+0x62>
 180:	00 00       	nop
 182:	08 95       	ret

Disassembly of section .text.LCD_Char:

00000184 <LCD_Char>:
 184:	9b b3       	in	r25, 0x1b	; 27
 186:	9f 70       	andi	r25, 0x0F	; 15
 188:	28 2f       	mov	r18, r24
 18a:	20 7f       	andi	r18, 0xF0	; 240
 18c:	92 2b       	or	r25, r18
 18e:	9b bb       	out	0x1b, r25	; 27
 190:	9b b3       	in	r25, 0x1b	; 27
 192:	91 60       	ori	r25, 0x01	; 1
 194:	9b bb       	out	0x1b, r25	; 27
 196:	9b b3       	in	r25, 0x1b	; 27
 198:	92 60       	ori	r25, 0x02	; 2
 19a:	9b bb       	out	0x1b, r25	; 27
 19c:	32 e0       	ldi	r19, 0x02	; 2
 19e:	3a 95       	dec	r19
 1a0:	f1 f7       	brne	.-4      	; 0x19e <LCD_Char+0x1a>
 1a2:	00 c0       	rjmp	.+0      	; 0x1a4 <LCD_Char+0x20>
 1a4:	9b b3       	in	r25, 0x1b	; 27
 1a6:	9d 7f       	andi	r25, 0xFD	; 253
 1a8:	9b bb       	out	0x1b, r25	; 27
 1aa:	ef e8       	ldi	r30, 0x8F	; 143
 1ac:	f1 e0       	ldi	r31, 0x01	; 1
 1ae:	31 97       	sbiw	r30, 0x01	; 1
 1b0:	f1 f7       	brne	.-4      	; 0x1ae <LCD_Char+0x2a>
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <LCD_Char+0x30>
 1b4:	00 00       	nop
 1b6:	2b b3       	in	r18, 0x1b	; 27
 1b8:	f0 e1       	ldi	r31, 0x10	; 16
 1ba:	8f 9f       	mul	r24, r31
 1bc:	c0 01       	movw	r24, r0
 1be:	11 24       	eor	r1, r1
 1c0:	92 2f       	mov	r25, r18
 1c2:	9f 70       	andi	r25, 0x0F	; 15
 1c4:	89 2b       	or	r24, r25
 1c6:	8b bb       	out	0x1b, r24	; 27
 1c8:	8b b3       	in	r24, 0x1b	; 27
 1ca:	82 60       	ori	r24, 0x02	; 2
 1cc:	8b bb       	out	0x1b, r24	; 27
 1ce:	32 e0       	ldi	r19, 0x02	; 2
 1d0:	3a 95       	dec	r19
 1d2:	f1 f7       	brne	.-4      	; 0x1d0 <LCD_Char+0x4c>
 1d4:	00 c0       	rjmp	.+0      	; 0x1d6 <LCD_Char+0x52>
 1d6:	8b b3       	in	r24, 0x1b	; 27
 1d8:	8d 7f       	andi	r24, 0xFD	; 253
 1da:	8b bb       	out	0x1b, r24	; 27
 1dc:	8f e9       	ldi	r24, 0x9F	; 159
 1de:	9f e0       	ldi	r25, 0x0F	; 15
 1e0:	01 97       	sbiw	r24, 0x01	; 1
 1e2:	f1 f7       	brne	.-4      	; 0x1e0 <LCD_Char+0x5c>
 1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <LCD_Char+0x62>
 1e6:	00 00       	nop
 1e8:	08 95       	ret

Disassembly of section .text.LCD_Init:

000001ea <LCD_Init>:
 1ea:	8f ef       	ldi	r24, 0xFF	; 255
 1ec:	8a bb       	out	0x1a, r24	; 26
 1ee:	8f e3       	ldi	r24, 0x3F	; 63
 1f0:	9c e9       	ldi	r25, 0x9C	; 156
 1f2:	01 97       	sbiw	r24, 0x01	; 1
 1f4:	f1 f7       	brne	.-4      	; 0x1f2 <LCD_Init+0x8>
 1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <LCD_Init+0xe>
 1f8:	00 00       	nop
 1fa:	82 e0       	ldi	r24, 0x02	; 2
 1fc:	0e 94 8f 00 	call	0x11e	; 0x11e <LCD_Command>
 200:	88 e2       	ldi	r24, 0x28	; 40
 202:	0e 94 8f 00 	call	0x11e	; 0x11e <LCD_Command>
 206:	8c e0       	ldi	r24, 0x0C	; 12
 208:	0e 94 8f 00 	call	0x11e	; 0x11e <LCD_Command>
 20c:	86 e0       	ldi	r24, 0x06	; 6
 20e:	0e 94 8f 00 	call	0x11e	; 0x11e <LCD_Command>
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	0e 94 8f 00 	call	0x11e	; 0x11e <LCD_Command>
 218:	8f e9       	ldi	r24, 0x9F	; 159
 21a:	9f e0       	ldi	r25, 0x0F	; 15
 21c:	01 97       	sbiw	r24, 0x01	; 1
 21e:	f1 f7       	brne	.-4      	; 0x21c <LCD_Init+0x32>
 220:	00 c0       	rjmp	.+0      	; 0x222 <LCD_Init+0x38>
 222:	00 00       	nop
 224:	08 95       	ret

Disassembly of section .text.LCD_String:

00000226 <LCD_String>:
 226:	0f 93       	push	r16
 228:	1f 93       	push	r17
 22a:	cf 93       	push	r28
 22c:	df 93       	push	r29
 22e:	8c 01       	movw	r16, r24
 230:	c0 e0       	ldi	r28, 0x00	; 0
 232:	d0 e0       	ldi	r29, 0x00	; 0
 234:	03 c0       	rjmp	.+6      	; 0x23c <LCD_String+0x16>
 236:	0e 94 c2 00 	call	0x184	; 0x184 <LCD_Char>
 23a:	21 96       	adiw	r28, 0x01	; 1
 23c:	f8 01       	movw	r30, r16
 23e:	ec 0f       	add	r30, r28
 240:	fd 1f       	adc	r31, r29
 242:	80 81       	ld	r24, Z
 244:	81 11       	cpse	r24, r1
 246:	f7 cf       	rjmp	.-18     	; 0x236 <LCD_String+0x10>
 248:	df 91       	pop	r29
 24a:	cf 91       	pop	r28
 24c:	1f 91       	pop	r17
 24e:	0f 91       	pop	r16
 250:	08 95       	ret

Disassembly of section .text.LCD_Clear:

00000252 <LCD_Clear>:

void LCD_Clear()
{
	LCD_Command (0x01);		/* Clear display */
 252:	81 e0       	ldi	r24, 0x01	; 1
 254:	0e 94 8f 00 	call	0x11e	; 0x11e <LCD_Command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 258:	8f e9       	ldi	r24, 0x9F	; 159
 25a:	9f e0       	ldi	r25, 0x0F	; 15
 25c:	01 97       	sbiw	r24, 0x01	; 1
 25e:	f1 f7       	brne	.-4      	; 0x25c <LCD_Clear+0xa>
 260:	00 c0       	rjmp	.+0      	; 0x262 <LCD_Clear+0x10>
 262:	00 00       	nop
	_delay_ms(2);
	LCD_Command (0x80);		/* Cursor at home position */
 264:	80 e8       	ldi	r24, 0x80	; 128
 266:	0e 94 8f 00 	call	0x11e	; 0x11e <LCD_Command>
 26a:	08 95       	ret

Disassembly of section .text.main:

0000008c <main>:
	if (row == 0 && pos<16)
	LCD_Command((pos & 0x0F)|0x80);	/* Command of first row and required position<16 */
	else if (row == 1 && pos<16)
	LCD_Command((pos & 0x0F)|0xC0);	/* Command of first row and required position<16 */
	LCD_String(str);		/* Call LCD string function */
}
  8c:	cf 93       	push	r28
  8e:	df 93       	push	r29
  90:	cd b7       	in	r28, 0x3d	; 61
  92:	de b7       	in	r29, 0x3e	; 62
  94:	a0 97       	sbiw	r28, 0x20	; 32
  96:	0f b6       	in	r0, 0x3f	; 63
  98:	f8 94       	cli
  9a:	de bf       	out	0x3e, r29	; 62
  9c:	0f be       	out	0x3f, r0	; 63
  9e:	cd bf       	out	0x3d, r28	; 61
  a0:	2c e6       	ldi	r18, 0x6C	; 108
  a2:	30 e0       	ldi	r19, 0x00	; 0
  a4:	40 e0       	ldi	r20, 0x00	; 0
  a6:	88 e0       	ldi	r24, 0x08	; 8
  a8:	f9 01       	movw	r30, r18
  aa:	de 01       	movw	r26, r28
  ac:	11 96       	adiw	r26, 0x01	; 1
  ae:	74 2f       	mov	r23, r20
  b0:	0e 94 36 01 	call	0x26c	; 0x26c <__movmemx_qi>
  b4:	fe 01       	movw	r30, r28
  b6:	39 96       	adiw	r30, 0x09	; 9
  b8:	84 e0       	ldi	r24, 0x04	; 4
  ba:	df 01       	movw	r26, r30
  bc:	1d 92       	st	X+, r1
  be:	8a 95       	dec	r24
  c0:	e9 f7       	brne	.-6      	; 0xbc <main+0x30>
  c2:	28 e7       	ldi	r18, 0x78	; 120
  c4:	30 e0       	ldi	r19, 0x00	; 0
  c6:	40 e0       	ldi	r20, 0x00	; 0
  c8:	8a e0       	ldi	r24, 0x0A	; 10
  ca:	f9 01       	movw	r30, r18
  cc:	de 01       	movw	r26, r28
  ce:	1d 96       	adiw	r26, 0x0d	; 13
  d0:	74 2f       	mov	r23, r20
  d2:	0e 94 36 01 	call	0x26c	; 0x26c <__movmemx_qi>
  d6:	fe 01       	movw	r30, r28
  d8:	77 96       	adiw	r30, 0x17	; 23
  da:	8a e0       	ldi	r24, 0x0A	; 10
  dc:	df 01       	movw	r26, r30
  de:	1d 92       	st	X+, r1
  e0:	8a 95       	dec	r24
  e2:	e9 f7       	brne	.-6      	; 0xde <main+0x52>
  e4:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LCD_Init>
  e8:	0e 94 29 01 	call	0x252	; 0x252 <LCD_Clear>
  ec:	85 e8       	ldi	r24, 0x85	; 133
  ee:	0e 94 8f 00 	call	0x11e	; 0x11e <LCD_Command>
  f2:	ce 01       	movw	r24, r28
  f4:	01 96       	adiw	r24, 0x01	; 1
  f6:	0e 94 13 01 	call	0x226	; 0x226 <LCD_String>
  fa:	86 ec       	ldi	r24, 0xC6	; 198
  fc:	0e 94 8f 00 	call	0x11e	; 0x11e <LCD_Command>
 100:	ce 01       	movw	r24, r28
 102:	0d 96       	adiw	r24, 0x0d	; 13
 104:	0e 94 13 01 	call	0x226	; 0x226 <LCD_String>
 108:	80 e0       	ldi	r24, 0x00	; 0
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	a0 96       	adiw	r28, 0x20	; 32
 10e:	0f b6       	in	r0, 0x3f	; 63
 110:	f8 94       	cli
 112:	de bf       	out	0x3e, r29	; 62
 114:	0f be       	out	0x3f, r0	; 63
 116:	cd bf       	out	0x3d, r28	; 61
 118:	df 91       	pop	r29
 11a:	cf 91       	pop	r28
 11c:	08 95       	ret

Disassembly of section .text.libgcc:

0000026c <__movmemx_qi>:
 26c:	99 27       	eor	r25, r25

0000026e <__movmemx_hi>:
 26e:	77 fd       	sbrc	r23, 7
 270:	05 c0       	rjmp	.+10     	; 0x27c <__movmemx_hi+0xe>
 272:	05 90       	lpm	r0, Z+
 274:	0d 92       	st	X+, r0
 276:	01 97       	sbiw	r24, 0x01	; 1
 278:	e1 f7       	brne	.-8      	; 0x272 <__movmemx_hi+0x4>
 27a:	08 95       	ret
 27c:	01 90       	ld	r0, Z+
 27e:	0d 92       	st	X+, r0
 280:	01 97       	sbiw	r24, 0x01	; 1
 282:	e1 f7       	brne	.-8      	; 0x27c <__movmemx_hi+0xe>
 284:	08 95       	ret
